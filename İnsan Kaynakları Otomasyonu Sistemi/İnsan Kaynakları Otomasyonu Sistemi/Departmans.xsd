<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Departmans" targetNamespace="http://tempuri.org/Departmans.xsd" xmlns:mstns="http://tempuri.org/Departmans.xsd" xmlns="http://tempuri.org/Departmans.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="insan_kaynak123ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="insan_kaynak123ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.İnsan_Kaynakları_Otomasyonu_Sistemi.Properties.Settings.GlobalReference.Default.insan_kaynak123ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DepartmanTableAdapter" GeneratorDataComponentClassName="DepartmanTableAdapter" Name="Departman" UserDataComponentName="DepartmanTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="insan_kaynak123ConnectionString (Settings)" DbObjectName="insan_kaynak123.dbo.Departman" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Departman] WHERE (([DepartmanID] = @Original_DepartmanID) AND ([Departman] = @Original_Departman))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DepartmanID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DepartmanID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Departman" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Departman" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Departman] ([Departman], [Aciklama]) VALUES (@Departman, @Aciklama);
SELECT DepartmanID, Departman, Aciklama FROM Departman WHERE (DepartmanID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Departman" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Departman" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Aciklama" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Aciklama" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT DepartmanID, Departman, Aciklama FROM dbo.Departman</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Departman] SET [Departman] = @Departman, [Aciklama] = @Aciklama WHERE (([DepartmanID] = @Original_DepartmanID) AND ([Departman] = @Original_Departman));
SELECT DepartmanID, Departman, Aciklama FROM Departman WHERE (DepartmanID = @DepartmanID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Departman" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Departman" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Aciklama" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Aciklama" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DepartmanID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DepartmanID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Departman" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Departman" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DepartmanID" ColumnName="DepartmanID" DataSourceName="insan_kaynak123.dbo.Departman" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DepartmanID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="DepartmanID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DepartmanID" DataSetColumn="DepartmanID" />
              <Mapping SourceColumn="Departman" DataSetColumn="Departman" />
              <Mapping SourceColumn="Aciklama" DataSetColumn="Aciklama" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Departmans" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="Departmans" msprop:Generator_DataSetName="Departmans">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Departman" msprop:Generator_RowEvHandlerName="DepartmanRowChangeEventHandler" msprop:Generator_RowDeletedName="DepartmanRowDeleted" msprop:Generator_RowDeletingName="DepartmanRowDeleting" msprop:Generator_RowEvArgName="DepartmanRowChangeEvent" msprop:Generator_TablePropName="Departman" msprop:Generator_RowChangedName="DepartmanRowChanged" msprop:Generator_RowChangingName="DepartmanRowChanging" msprop:Generator_TableClassName="DepartmanDataTable" msprop:Generator_RowClassName="DepartmanRow" msprop:Generator_TableVarName="tableDepartman" msprop:Generator_UserTableName="Departman">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DepartmanID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="DepartmanID" msprop:Generator_ColumnPropNameInTable="DepartmanIDColumn" msprop:Generator_ColumnVarNameInTable="columnDepartmanID" msprop:Generator_UserColumnName="DepartmanID" type="xs:int" />
              <xs:element name="Departman" msprop:Generator_ColumnPropNameInRow="Departman" msprop:Generator_ColumnPropNameInTable="DepartmanColumn" msprop:Generator_ColumnVarNameInTable="columnDepartman" msprop:Generator_UserColumnName="Departman">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Aciklama" msprop:Generator_ColumnPropNameInRow="Aciklama" msprop:Generator_ColumnPropNameInTable="AciklamaColumn" msprop:Generator_ColumnVarNameInTable="columnAciklama" msprop:Generator_UserColumnName="Aciklama">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Departman" />
      <xs:field xpath="mstns:DepartmanID" />
    </xs:unique>
  </xs:element>
</xs:schema>